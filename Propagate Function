from numpy import *
import scipy
import numpy as np
import matplotlib.pyplot as plt 
from mpl_toolkits.mplot3d import Axes3D

fc=5
#.0000975
#r1=.0000575    #.0000575
#Nf=waveWidth**2/(waveLen*z)
fig=plt.figure()
ax = fig.add_subplot(111,projection='3d')

def makeAry(size,waveWidth,r1,typ):    
    xval=np.linspace(-waveWidth,waveWidth,size)
    yval=np.linspace(-waveWidth,waveWidth,size)
    X,Y=meshgrid(xval,yval)
    Z=arange(len(X)*len(Y)).reshape(len(X),len(Y))
    for t in range(len(X)):
        for r in range(len(Y)):
            if typ==0:
                if (abs(X[t][r])>waveWidth*1 or abs(Y[t][r])>waveWidth*1) or (abs(X[t][r])<r1 and abs(Y[t][r])<r1):
                    Z[t][r]=0
                else:
                    Z[t][r]=1
            if typ==1:
                if sqrt(X[t][r]**2+Y[t][r]**2)>waveWidth*1 or sqrt(X[t][r]**2+Y[t][r]**2)<r1*1.5:
                    Z[t][r]=0
                else:
                    Z[t][r]=1
    return Z
    
def Propagate(inputwav,z,wavlen): 
    waveWidth=.0000975  #inputwav[inputwav.size-1]
    k=2*pi/wavlen
    def Int(x,y,psi,xp,yp):
        r=sqrt(z**2+(x-xp)**2+(y-yp)**2)
        return (exp(-1j*k*r)/(r**2))*psi
        #*exp(1j*k*(x**2+y**2)/(2*fc)) 
    def makeInput(waval):
        xval=np.linspace(-waveWidth,waveWidth,sqrt(waval.size))
        yval=np.linspace(-waveWidth,waveWidth,sqrt(waval.size))
        X,Y=meshgrid(xval,yval)
        return X,Y
    def PsiPrimeSqr(aryx,aryy,aryP,xp,yp):
        psipr=Int(aryx,aryy,aryP,xp,yp)
        aryy=[]
        aryx=[]
        PsiTot=sum(psipr)
        return abs((PsiTot*z)/(1j)) 
    aryLx,aryLy=makeInput(inputwav)
    #inputwav=np.delete(inputwav,inputwav.size-1)
    xp=arange(-waveWidth*1,waveWidth*1,.000003)
    yp=arange(-waveWidth*1,waveWidth*1,.000003)
    Xp,Yp=meshgrid(xp,yp)
    zs=np.array([PsiPrimeSqr(aryLx,aryLy,inputwav,xp,yp) for xp,yp in zip(np.ravel(Xp),np.ravel(Yp))])
    Zp=zs.reshape(Xp.shape)
    return Xp,Yp,Zp
    
waveWidth=.0000975 
ary=makeAry(300,waveWidth,.0000,1)   
X,Y,Z=Propagate(ary,1,1.5e-10)
ax.plot_surface(X,Y,Z,cmap=plt.cm.jet, rstride=1, cstride=1, linewidth=0)
plt.show()
